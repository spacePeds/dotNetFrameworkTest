/**
 * https://medium.com/velotio-perspectives/how-to-write-jenkinsfile-for-angular-and-net-based-applications-1cbdbf56f906
 *
 * https://www.youtube.com/watch?v=7KCS70sCoK0&t=748s
 */

 //globall define
def gv
pipeline {
    //job agent
    agent { label "windows"}
    options {
        disableConcurrentBuilds()
    }
    //custom variables
    environment {
        START_TIME = new Date().format('yyyy-MM-dd HH:mm:ss')
        PROJECT_VERSION = '1.0.2'
    }
    stages {
        stage("init and Clean Workspace") {
            steps {
                echo "load external groovy script"
                //script {
                //    gv = load "script.groovy"
                //}
                //MYcleanWs()
            }
        }
        stage('Environment Setup') {
            parallel {
                stage('dev'){
                    when {
                        expression {
                            env.GIT_BRANCH == 'origin/dev'
                        }
                    }
                    environment {
                        //bind the credentials to your env variables
                        PROJECT_CREDENTIALS_TEMP = credentials('MY_SECRET_CREDENTIALS')
                        
                    }
                    steps {
                        echo "building branch: ${BRANCH_NAME}"
                        script {
                            //need to split the username and password credentials
                            //method one:
                            env.PROJECT_USERNAME = "${PROJECT_CREDENTIALS_TEMP_USR}"
                            env.PROJECT_PASSWORD = "${PROJECT_CREDENTIALS_TEMP_PSW}"
                            env.TEST_CONFIG_FILE = 'custom-dev.config'
                            //echo "Password 2: ${PROJECT_PASSWORD}"

                            //method two, use a wrapper:
                            //withCredentials([
                            //    usernamePassword(credentials: 'MY_SECRET_CREDENTIALS', usernameVariable: PROJECT_USER, passwordVariable: PROJECT_PASSWORD)
                            //]) {
                            //    echo "Username 2: ${PROJECT_USER}"
                            //    echo "Password 2: ${PROJECT_PASSWORD}"
                            //}
                            //env.DEPLOY_FQDN = 'somepath.com'
                            //env.GSDS_CONFIG_FILE = 'dev.conf'
                        }
                    }
                }
                
            }
        }
        stage('Inject Credentials') {
            steps {
                sh """
                    set +x
                    sed -i -e \"s/JENKINS_INJECTED_VALUE/${PROJECT_PASSWORD}/g\" dotNetFrameworkTest/config/${TEST_CONFIG_FILE}
                    set -x
                """
            }
        }
        //stage('Build') {
        //    steps {
                //script {
                //    gv.buildApp()
                //}
        //    }
            
        //}
    }
    post {
        failure {
            mail (to: 'lpedley@good-sam.com',
                 subject: "Job '${JOB_NAME}' (${BUILD_NUMBER}) Failed",
                 body: "Please go to ${BUILD_URL} and verify the build");
        }
    }
}
